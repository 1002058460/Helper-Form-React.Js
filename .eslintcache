[{"C:\\Users\\user\\helperform\\src\\index.js":"1","C:\\Users\\user\\helperform\\src\\App.js":"2","C:\\Users\\user\\helperform\\src\\Components\\FormsUI\\Select\\index.js":"3","C:\\Users\\user\\helperform\\src\\Components\\FormsUI\\Textfield\\index.js":"4","C:\\Users\\user\\helperform\\src\\Components\\FormsUI\\DataTimePicker\\index.js":"5","C:\\Users\\user\\helperform\\src\\Components\\FormsUI\\Checkbox\\index.js":"6","C:\\Users\\user\\helperform\\src\\Components\\FormsUI\\NextButton\\index.js":"7","C:\\Users\\user\\helperform\\src\\Second.js":"8","C:\\Users\\user\\helperform\\src\\Main.js":"9","C:\\Users\\user\\helperform\\src\\Third.js":"10","C:\\Users\\user\\helperform\\src\\Employees.js":"11","C:\\Users\\user\\helperform\\src\\EmployeeForm.js":"12","C:\\Users\\user\\helperform\\src\\Components\\PageHeader.js":"13","C:\\Users\\user\\helperform\\src\\Components\\Popup.js":"14","C:\\Users\\user\\helperform\\src\\Components\\useTable.js":"15","C:\\Users\\user\\helperform\\src\\Components\\controls\\Controls.js":"16","C:\\Users\\user\\helperform\\src\\Components\\controls\\Input.js":"17","C:\\Users\\user\\helperform\\src\\Components\\controls\\RadioGroup.js":"18","C:\\Users\\user\\helperform\\src\\Components\\controls\\Select.js":"19","C:\\Users\\user\\helperform\\src\\Components\\controls\\Checkbox.js":"20","C:\\Users\\user\\helperform\\src\\Components\\controls\\DatePicker.js":"21","C:\\Users\\user\\helperform\\src\\Components\\controls\\Button.js":"22","C:\\Users\\user\\helperform\\src\\Components\\controls\\ActionButton.js":"23","C:\\Users\\user\\helperform\\src\\Components\\Header.js":"24","C:\\Users\\user\\helperform\\src\\Components\\useForm.js":"25","C:\\Users\\user\\helperform\\src\\services\\employeeService.js":"26","C:\\Users\\user\\helperform\\src\\Cards.js":"27","C:\\Users\\user\\helperform\\src\\CardComponents\\index.js":"28","C:\\Users\\user\\helperform\\src\\CardComponents\\CandidateRest\\index.js":"29","C:\\Users\\user\\helperform\\src\\CardComponents\\CandidateInfo\\index.js":"30","C:\\Users\\user\\helperform\\src\\CardComponents\\CandidateProfile\\index.js":"31","C:\\Users\\user\\helperform\\src\\CardComponents\\CandidateDoc\\index.js":"32","C:\\Users\\user\\helperform\\src\\CardComponents\\CandidateSkills\\index.js":"33","C:\\Users\\user\\helperform\\src\\CardComponents\\CandidateMedic\\index.js":"34","C:\\Users\\user\\helperform\\src\\CardComponents\\CandidateInfo\\ModalWindow.js":"35","C:\\Users\\user\\helperform\\src\\CardComponents\\CandidateInfo\\ModalBiodata.js":"36"},{"size":566,"mtime":1634178479549,"results":"37","hashOfConfig":"38"},{"size":17541,"mtime":1634268222510,"results":"39","hashOfConfig":"38"},{"size":957,"mtime":1632825035000,"results":"40","hashOfConfig":"38"},{"size":544,"mtime":1632825035000,"results":"41","hashOfConfig":"38"},{"size":635,"mtime":1632825035000,"results":"42","hashOfConfig":"38"},{"size":976,"mtime":1632825035000,"results":"43","hashOfConfig":"38"},{"size":503,"mtime":1632825035000,"results":"44","hashOfConfig":"38"},{"size":18065,"mtime":1633057572797,"results":"45","hashOfConfig":"38"},{"size":21012,"mtime":1633589647991,"results":"46","hashOfConfig":"38"},{"size":36818,"mtime":1633531562576,"results":"47","hashOfConfig":"38"},{"size":4391,"mtime":1633570660716,"results":"48","hashOfConfig":"38"},{"size":4187,"mtime":1633570660716,"results":"49","hashOfConfig":"38"},{"size":1363,"mtime":1632825035000,"results":"50","hashOfConfig":"38"},{"size":1339,"mtime":1632825035000,"results":"51","hashOfConfig":"38"},{"size":3763,"mtime":1632825035000,"results":"52","hashOfConfig":"38"},{"size":392,"mtime":1632825035000,"results":"53","hashOfConfig":"38"},{"size":458,"mtime":1632825035000,"results":"54","hashOfConfig":"38"},{"size":777,"mtime":1632825035000,"results":"55","hashOfConfig":"38"},{"size":893,"mtime":1632825035000,"results":"56","hashOfConfig":"38"},{"size":725,"mtime":1632825035000,"results":"57","hashOfConfig":"38"},{"size":812,"mtime":1632825035000,"results":"58","hashOfConfig":"38"},{"size":709,"mtime":1632825035000,"results":"59","hashOfConfig":"38"},{"size":839,"mtime":1632825035000,"results":"60","hashOfConfig":"38"},{"size":2172,"mtime":1632825035000,"results":"61","hashOfConfig":"38"},{"size":1159,"mtime":1632825035000,"results":"62","hashOfConfig":"38"},{"size":1449,"mtime":1632825035000,"results":"63","hashOfConfig":"38"},{"size":3859,"mtime":1634178380962,"results":"64","hashOfConfig":"38"},{"size":2100,"mtime":1634179298883,"results":"65","hashOfConfig":"38"},{"size":1799,"mtime":1634196748513,"results":"66","hashOfConfig":"38"},{"size":4688,"mtime":1634266188599,"results":"67","hashOfConfig":"38"},{"size":2524,"mtime":1634196748514,"results":"68","hashOfConfig":"38"},{"size":997,"mtime":1634179299004,"results":"69","hashOfConfig":"38"},{"size":13509,"mtime":1634196818409,"results":"70","hashOfConfig":"38"},{"size":4637,"mtime":1634196748513,"results":"71","hashOfConfig":"38"},{"size":2744,"mtime":1634265538929,"results":"72","hashOfConfig":"38"},{"size":15368,"mtime":1634271965679,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1szy5uv",{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\helperform\\src\\index.js",[],["159","160"],"C:\\Users\\user\\helperform\\src\\App.js",["161"],"import React from 'react';\nimport { Formik, Form } from 'formik';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Container,\n  Grid\n} from '@material-ui/core';\nimport Button from '@mui/material/Button';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport Textfield from './Components/FormsUI/Textfield';\nimport DateTimePicker from './Components/FormsUI/DataTimePicker';\nimport Checkbox from '@mui/material/Checkbox';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  formWrapper: {\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(8),\n  },\n}));\n\nconst App = (props) => {\n  const classes = useStyles();\n\n  const { photo, setPhoto } = props;\n  const { linkVideo, setLinkVideo } = props;\n  const { fullName, setFullName, fullNameError } = props;\n  const { id, setId, idError } = props;\n  const { passport, setPassport } = props;\n  const { bioFee, setBioFee, bioFeeError } = props;\n  const { loan, setLoan, loanError } = props;\n  const { pocketMoney, setPocketMoney, pocketMoneyError } = props;\n  const { minimumSalary, setMinimumSalary, minimumSalaryError } = props;\n  const { maritalStatus, setMaritalStatus, maritalStatusError } = props;\n  const { exsg, setExsg } = props;\n  const { childcare, setChildcare } = props;\n  const { elderlycare, setElderlycare } = props;\n  const { remarks, setRemarks } = props;\n  const { dateOfBirth, setDateOfBirth, dateOfBirthError } = props;\n  const { placeOfBirth, setPlaceOfBirth, placeOfBirthError } = props;\n  const { height, setHeight, heightError } = props;\n  const { weight, setWeight, weightError } = props;\n  const { nationality, setNationality, nationalityError } = props;\n  const { phoneNumber, setPhoneNumber, phoneNumberError } = props;\n  const { address, setAddress, addressError } = props;\n  const { port, setPort, portError } = props;\n  const { religion, setReligion, religionError } = props;\n  const { edu, setEdu, eduError } = props;\n  const { siblings, setSiblings } = props;\n  const { aoc, setAoc } = props;\n\n  return (\n    <Grid container>\n\n      <Grid item xs={12}>\n        <Container fixed>\n          <div className={classes.formWrapper}>\n\n            <Formik>\n              <Form>\n\n                <Grid container spacing={2}>\n\n                  <Grid item xs={6}>\n                    <input\n                      name=\"photo\"\n                      accept=\"image/*\"\n                      className={classes.input}\n                      style={{ display: 'none' }}\n                      id=\"outlined-button-file\"\n                      multiple\n                      type=\"file\"\n                    />\n                    <label htmlFor=\"outlined-button-file\">\n                      <Textfield\n                        name=\"photo\"\n                        label=\"Upload your photo\"\n                        InputLabelProps={{ shrink: true }}\n                        InputProps={{\n                          endAdornment: <Button value={photo}\n                          onChange={event => setPhoto(event.target.value)} variant=\"contained\" component=\"span\" className={classes.button}>\n                            Upload\n                          </Button>\n                        }}\n                      />\n                    </label>\n                  </Grid>\n\n\n                  <Grid item xs={6}>\n                    <Textfield\n                      name=\"linkVideo\"\n                      label=\"Link Video\"\n                      value={linkVideo}\n                      onChange={event => setLinkVideo(event.target.value)}\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <Textfield\n                      name=\"id\"\n                      required\n                      label=\"ID\"\n                      error={idError !== ''}\n                      helperText={idError}\n                      value={id}\n                      onChange={event => setId(event.target.value)}\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <Textfield\n                      name=\"passport\"\n                      label=\"Passport Status\"\n                      value={passport}\n                      onChange={event => setPassport(event.target.value)}\n                    />\n                  </Grid>\n\n                  <Grid item xs={3}>\n                    <Textfield\n                      name=\"biofee\"\n                      label=\"Bio Fee\"\n                      required\n                      error={bioFeeError !== ''}\n                      helperText={bioFeeError}\n                      value={bioFee}\n                      onChange={event => setBioFee(event.target.value)}\n                      type=\"number\"\n                      InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={3}>\n                    <Textfield\n                      name=\"loan\"\n                      label=\"Loan\"\n                      required\n                      error={loanError !== ''}\n                      helperText={loanError}\n                      value={loan}\n                      onChange={event => setLoan(event.target.value)}\n                      type=\"number\"\n                      InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={3}>\n                    <Textfield\n                      name=\"pmoney\"\n                      label=\"Pocket Money\"\n                      required\n                      error={pocketMoneyError !== ''}\n                      helperText={pocketMoneyError}\n                      value={pocketMoney}\n                      onChange={event => setPocketMoney(event.target.value)}\n                      type=\"number\"\n                      InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={3}>\n                    <Textfield\n                      name=\"msalary\"\n                      label=\"Minimum Salary\"\n                      required\n                      error={minimumSalaryError !== ''}\n                      helperText={minimumSalaryError}\n                      value={minimumSalary}\n                      onChange={event => setMinimumSalary(event.target.value)}\n                      type=\"number\"\n                      InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <Box sx={{ minWidth: 120 }}>\n                      <FormControl fullWidth>\n                        <InputLabel>Marital Status</InputLabel>\n                        <Select\n                          name=\"marital\"\n                          label=\"Marital Status\"\n                          error={maritalStatusError !== ''}\n                          helperText={maritalStatusError}\n                          value={maritalStatus}\n                          onChange={event => setMaritalStatus(event.target.value)}\n                          required\n                        >\n                          <MenuItem value={\"SINGLE\"}>Single</MenuItem>\n                          <MenuItem value={\"MARRIED\"}>Married</MenuItem>\n                          <MenuItem value={\"DIVORCED\"}>Divorced</MenuItem>\n                          <MenuItem value={\"WIDOWED\"}>Widowed</MenuItem>\n                        </Select>\n                      </FormControl>\n                    </Box>\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <Box sx={{ minWidth: 120 }}>\n                      <FormControl fullWidth>\n                        <InputLabel>Experience in SG</InputLabel>\n                        <Select\n                          name=\"EXSG\"\n                          label=\"Experience in SG\"\n                          value={exsg}\n                          onChange={event => setExsg(event.target.value)}\n                        >\n                          <MenuItem value={\"TRANSFER\"}>Transfer</MenuItem>\n                          <MenuItem value={\"EX-SG\"}>Ex-sg</MenuItem>\n                          <MenuItem value={\"FRESH\"}>Fresh</MenuItem>\n                        </Select>\n                      </FormControl>\n                    </Box>\n                  </Grid>\n\n                  <Grid item xs={2}>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          name=\"childcare\"\n                          label=\"Childcare\"\n                          value={childcare}\n                          onChange={event => setChildcare(event.target.value)}\n                        />\n                      }\n                      label=\"Childcare\" />\n                  </Grid>\n\n                  <Grid item xs={2}>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          name=\"elderlycare\"\n                          label=\"Elderlycare\"\n                          value={elderlycare}\n                          onChange={event => setElderlycare(event.target.value)}\n                        />\n                      }\n                      label=\"Elderlycare\" />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Textfield\n                      name=\"remarks\"\n                      label=\"Remarks\"\n                      value={remarks}\n                      onChange={event => setRemarks(event.target.value)}\n                      multiline={true}\n                      rows={3}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Textfield\n                      name=\"name\"\n                      label=\"Full Name\"\n                      error={fullNameError !== ''}\n                      helperText={fullNameError}\n                      value={fullName}\n                      onChange={event => setFullName(event.target.value)}\n                      required\n                    />\n                  </Grid>\n\n                  <Grid item xs={3}>\n                    <DateTimePicker\n                      name=\"dob\"\n                      label=\"Date of Birth\"\n                      required\n                      error={dateOfBirthError !== ''}\n                      helperText={dateOfBirthError}\n                      value={dateOfBirth}\n                      onChange={event => setDateOfBirth(event.target.value)}\n                    />\n                  </Grid>\n\n                  <Grid item xs={3}>\n                    <Textfield\n                      name=\"pob\"\n                      label=\"Place of Birth\"\n                      required\n                      error={placeOfBirthError !== ''}\n                      helperText={placeOfBirthError}\n                      value={placeOfBirth}\n                      onChange={event => setPlaceOfBirth(event.target.value)}\n                    />\n                  </Grid>\n\n                  <Grid item xs={3}>\n                    <Textfield\n                      name=\"height\"\n                      label=\"Height\"\n                      required\n                      type=\"number\"\n                      error={heightError !== ''}\n                      helperText={heightError}\n                      value={height}\n                      onChange={event => setHeight(event.target.value)}\n                      InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">cm</InputAdornment>,\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={3}>\n                    <Textfield\n                      name=\"weight\"\n                      label=\"Weight\"\n                      required\n                      error={weightError !== ''}\n                      helperText={weightError}\n                      value={weight}\n                      onChange={event => setWeight(event.target.value)}\n                      InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">kg</InputAdornment>,\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <Box sx={{ minWidth: 120 }}>\n                      <FormControl fullWidth>\n                        <InputLabel>Nationality</InputLabel>\n                        <Select\n                          name=\"nationality\"\n                          label=\"Nationality\"\n                          required\n                          error={nationalityError !== ''}\n                          helperText={nationalityError}\n                          value={nationality}\n                          onChange={event => setNationality(event.target.value)}\n                        >\n                          <MenuItem value={\"BURMESE\"}>Burmese</MenuItem>\n                          <MenuItem value={\"FILIPINO\"}>Filipino</MenuItem>\n                          <MenuItem value={\"INDONESIAN\"}>Indonesian</MenuItem>\n                        </Select>\n                      </FormControl>\n                    </Box>\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <Textfield\n                      name=\"phone\"\n                      label=\"Phone Number\"\n                      required\n                      error={phoneNumberError !== ''}\n                      helperText={phoneNumberError}\n                      value={phoneNumber}\n                      onChange={event => setPhoneNumber(event.target.value)}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Textfield\n                      name=\"address\"\n                      label=\"Residential Address\"\n                      required\n                      error={addressError !== ''}\n                      helperText={addressError}\n                      value={address}\n                      onChange={event => setAddress(event.target.value)}\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <Textfield\n                      name=\"port\"\n                      label=\"Name of Port / Airport To Be Repatriated To\"\n                      required\n                      error={portError !== ''}\n                      helperText={portError}\n                      value={port}\n                      onChange={event => setPort(event.target.value)}\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <Box sx={{ minWidth: 120 }}>\n                      <FormControl fullWidth>\n                        <InputLabel>Religion</InputLabel>\n                        <Select\n                          name=\"religion\"\n                          label=\"Religion\"\n                          required\n                          error={religionError !== ''}\n                          helperText={religionError}\n                          value={religion}\n                          onChange={event => setReligion(event.target.value)}\n                        >\n                          <MenuItem value={\"BUDDHIST\"}>Buddhist</MenuItem>\n                          <MenuItem value={\"CHRISTIAN\"}>Christian</MenuItem>\n                          <MenuItem value={\"CATHOLIC\"}>Catholic</MenuItem>\n                          <MenuItem value={\"HINDU\"}>Hindu</MenuItem>\n                          <MenuItem value={\"MUSLIM\"}>Muslim</MenuItem>\n                          <MenuItem value={\"OTHER\"}>Other</MenuItem>\n                        </Select>\n                      </FormControl>\n                    </Box>\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <Textfield\n                      name=\"edu\"\n                      label=\"Education Level\"\n                      required\n                      error={eduError !== ''}\n                      helperText={eduError}\n                      value={edu}\n                      onChange={event => setEdu(event.target.value)}\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <Textfield\n                      name=\"siblings\"\n                      label=\"Number of Sibings\"\n                      value={siblings}\n                      onChange={event => setSiblings(event.target.value)}\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <Textfield\n                      name=\"aoc\"\n                      label=\"Age of Child\"\n                      value={aoc}\n                      onChange={event => setAoc(event.target.value)}\n                    />\n                  </Grid>\n\n                </Grid>\n                <br />\n              </Form>\n            </Formik>\n\n          </div>\n        </Container>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default App;\n","C:\\Users\\user\\helperform\\src\\Components\\FormsUI\\Select\\index.js",[],["162","163"],"C:\\Users\\user\\helperform\\src\\Components\\FormsUI\\Textfield\\index.js",[],"C:\\Users\\user\\helperform\\src\\Components\\FormsUI\\DataTimePicker\\index.js",[],"C:\\Users\\user\\helperform\\src\\Components\\FormsUI\\Checkbox\\index.js",[],"C:\\Users\\user\\helperform\\src\\Components\\FormsUI\\NextButton\\index.js",[],["164","165"],"C:\\Users\\user\\helperform\\src\\Second.js",["166"],"import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Container,\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport Textfield from './Components/FormsUI/Textfield';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel'\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formWrapper: {\r\n        marginTop: theme.spacing(5),\r\n        marginBottom: theme.spacing(8),\r\n    },\r\n    radioStyle: {\r\n        padding: '10px',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between'\r\n    }\r\n}));\r\n\r\nconst Second = (props) => {\r\n    const classes = useStyles();\r\n    const { allergies, setAllergies } = props;\r\n    const { mental, setMental } = props;\r\n    const { epilepsy, setEpilepsy } = props;\r\n    const { asthma, setAsthma } = props;\r\n    const { diabetes, setDiabetes } = props;\r\n    const { hyper, setHyper } = props;\r\n    const { tbc, setTbc } = props;\r\n    const { heart, setHeart } = props;\r\n    const { malaria, setMalaria } = props;\r\n    const { operations, setOperations } = props;\r\n    const { othersIll, setOthersIll } = props;\r\n    const { disabilities, setDisabilities } = props;\r\n    const { diet, setDiet } = props;\r\n    const { beef, setBeef } = props;\r\n    const { pork, setPork } = props;\r\n    const { othersFood, setOthersFood } = props;\r\n    const { rest, setRest } = props;\r\n    const { remar, setRemar } = props;\r\n\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Container fixed>\r\n                    <div className={classes.formWrapper}>\r\n\r\n                        <Formik>\r\n                            <Form>\r\n\r\n                                <Grid container spacing={2}>\r\n\r\n                                    <Grid item xs={12}>\r\n                                        <Textfield\r\n                                            name=\"allergies\"\r\n                                            label=\"Allergies\"\r\n                                            value={allergies}\r\n                                            onChange={event => setAllergies(event.target.value)}\r\n                                        />\r\n                                    </Grid>\r\n\r\n\r\n                                    <Grid item xs={12}>\r\n                                        <Typography>Past And Existing Illness</Typography>\r\n                                        <div className={classes.radioStyle}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                                <FormLabel component=\"legend\">Mental Illness</FormLabel>\r\n                                                <RadioGroup\r\n                                                    defaultValue=\"no\"\r\n                                                    value={mental}\r\n                                                    row\r\n                                                    onChange={event => setMental(event.target.value)}\r\n                                                >\r\n                                                    <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                    <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </div>\r\n\r\n                                        <div className={classes.radioStyle}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                                <FormLabel component=\"legend\">Epilepsy</FormLabel>\r\n                                                <RadioGroup\r\n                                                    defaultValue=\"no\"\r\n                                                    value={epilepsy}\r\n                                                    row\r\n                                                    onChange={event => setEpilepsy(event.target.value)}\r\n                                                >\r\n                                                    <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                    <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </div>\r\n\r\n                                        <div className={classes.radioStyle}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                                <FormLabel component=\"legend\">Asthma</FormLabel>\r\n                                                <RadioGroup\r\n                                                    defaultValue=\"no\"\r\n                                                    value={asthma}\r\n                                                    row\r\n                                                    onChange={event => setAsthma(event.target.value)}\r\n                                                >\r\n                                                    <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                    <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </div>\r\n\r\n                                        <div className={classes.radioStyle}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                                <FormLabel component=\"legend\">Diabetes</FormLabel>\r\n                                                <RadioGroup\r\n                                                    defaultValue=\"no\"\r\n                                                    value={diabetes}\r\n                                                    row\r\n                                                    onChange={event => setDiabetes(event.target.value)}\r\n                                                >\r\n                                                    <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                    <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </div>\r\n\r\n                                        <div className={classes.radioStyle}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                                <FormLabel component=\"legend\">Hypertension</FormLabel>\r\n                                                <RadioGroup\r\n                                                    defaultValue=\"no\"\r\n                                                    value={hyper}\r\n                                                    row\r\n                                                    onChange={event => setHyper(event.target.value)}\r\n                                                >\r\n                                                    <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                    <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </div>\r\n\r\n                                        <div className={classes.radioStyle}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                                <FormLabel component=\"legend\">Tubercolosis</FormLabel>\r\n                                                <RadioGroup\r\n                                                    defaultValue=\"no\"\r\n                                                    value={tbc}\r\n                                                    row\r\n                                                    onChange={event => setTbc(event.target.value)}\r\n                                                >\r\n                                                    <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                    <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </div>\r\n\r\n                                        <div className={classes.radioStyle}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                                <FormLabel component=\"legend\">Heart Disease</FormLabel>\r\n                                                <RadioGroup\r\n                                                    defaultValue=\"no\"\r\n                                                    value={heart}\r\n                                                    row\r\n                                                    onChange={event => setHeart(event.target.value)}\r\n                                                >\r\n                                                    <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                    <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </div>\r\n\r\n                                        <div className={classes.radioStyle}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                                <FormLabel component=\"legend\">Malaria</FormLabel>\r\n                                                <RadioGroup\r\n                                                    defaultValue=\"no\"\r\n                                                    value={malaria}\r\n                                                    row\r\n                                                    onChange={event => setMalaria(event.target.value)}\r\n                                                >\r\n                                                    <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                    <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </div>\r\n\r\n                                        <div className={classes.radioStyle}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                                <FormLabel component=\"legend\">Operations</FormLabel>\r\n                                                <RadioGroup\r\n                                                    defaultValue=\"no\"\r\n                                                    value={operations}\r\n                                                    row\r\n                                                    onChange={event => setOperations(event.target.value)}\r\n                                                >\r\n                                                    <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                    <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </div>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12}>\r\n                                        <Textfield\r\n                                            name=\"othersill\"\r\n                                            label=\"Others\"\r\n                                            value={othersIll}\r\n                                            onChange={event => setOthersIll(event.target.value)}\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6}>\r\n                                        <Textfield\r\n                                            name=\"disability\"\r\n                                            label=\"Physical Disabilities\"\r\n                                            value={disabilities}\r\n                                            onChange={event => setDisabilities(event.target.value)}\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6}>\r\n                                        <Textfield\r\n                                            name=\"diet\"\r\n                                            label=\"Dietary Restrictions\"\r\n                                            value={diet}\r\n                                            onChange={event => setDiet(event.target.value)}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography>Food Handling Preferences</Typography>\r\n                                        <div style={{ padding: '10px', display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                                <FormLabel component=\"legend\">Pork</FormLabel>\r\n                                                <RadioGroup\r\n                                                    defaultValue=\"yes\"\r\n                                                    value={pork}\r\n                                                    row\r\n                                                    onChange={event => setPork(event.target.value)}\r\n                                                >\r\n                                                    <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                    <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </div>\r\n\r\n                                        <div style={{ padding: '10px', display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                                <FormLabel component=\"legend\">Beef</FormLabel>\r\n                                                <RadioGroup\r\n                                                    defaultValue=\"yes\"\r\n                                                    value={beef}\r\n                                                    row\r\n                                                    onChange={event => setBeef(event.target.value)}\r\n                                                >\r\n                                                    <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                    <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Textfield\r\n                                            name=\"othersfood\"\r\n                                            label=\"Others\"\r\n                                            value={othersFood}\r\n                                            onChange={event => setOthersFood(event.target.value)}\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6}>\r\n                                        <Textfield\r\n                                            name=\"rest\"\r\n                                            label=\"Preference for Rest Day per month\"\r\n                                            value={rest}\r\n                                            onChange={event => setRest(event.target.value)}\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6}>\r\n                                        <Textfield\r\n                                            name=\"remar\"\r\n                                            label=\"Remarks\"\r\n                                            value={remar}\r\n                                            onChange={event => setRemar(event.target.value)}\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n                                <br />\r\n                            </Form>\r\n                        </Formik>\r\n\r\n                    </div>\r\n                </Container>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Second;","C:\\Users\\user\\helperform\\src\\Main.js",[],"C:\\Users\\user\\helperform\\src\\Third.js",["167"],"import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Container,\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport Textfield from './Components/FormsUI/Textfield';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormLabel from '@mui/material/FormLabel'\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formWrapper: {\r\n        marginTop: theme.spacing(5),\r\n        marginBottom: theme.spacing(8),\r\n    },\r\n}));\r\n\r\nconst Third = (props) => {\r\n    const classes = useStyles();\r\n    const { infants1, setInfants1 } = props;\r\n    const { infants2, setInfants2 } = props;\r\n    const { infantsText, setInfantsText } = props;\r\n    const { careElderly1, setCareElderly1 } = props;\r\n    const { careElderly2, setCareElderly2 } = props;\r\n    const { careElderlyText, setCareElderlyText } = props;\r\n    const { careDisabled1, setCareDisabled1 } = props;\r\n    const { careDisabled2, setCareDisabled2 } = props;\r\n    const { careDisabledText, setCareDisabledText } = props;\r\n    const { genHouse1, setGenHouse1 } = props;\r\n    const { genHouse2, setGenHouse2 } = props;\r\n    const { genHouseText, setGenHouseText } = props;\r\n    const { cooking1, setCooking1 } = props;\r\n    const { cooking2, setCooking2 } = props;\r\n    const { cookingText, setCookingText } = props;\r\n    const { lang1, setLang1 } = props;\r\n    const { lang2, setLang2 } = props;\r\n    const { langText1, setLangText1 } = props;\r\n    const { langText2, setLangText2 } = props;\r\n    const { otherSkills1, setOtherSkills1 } = props;\r\n    const { otherSkills2, setOtherSkills2 } = props;\r\n    const { otherSkillsText1, setOtherSkillsText1 } = props;\r\n    const { otherSkillsText2, setOtherSkillsText2 } = props;\r\n\r\n    const { infants3, setInfants3 } = props;\r\n    const { infants4, setInfants4 } = props;\r\n    const { infantsTextB, setInfantsTextB } = props;\r\n    const { careElderly3, setCareElderly3 } = props;\r\n    const { careElderly4, setCareElderly4 } = props;\r\n    const { careElderlyTextB, setCareElderlyTextB } = props;\r\n    const { careDisabled3, setCareDisabled3 } = props;\r\n    const { careDisabled4, setCareDisabled4 } = props;\r\n    const { careDisabledTextB, setCareDisabledTextB } = props;\r\n    const { genHouse3, setGenHouse3 } = props;\r\n    const { genHouse4, setGenHouse4 } = props;\r\n    const { genHouseTextB, setGenHouseTextB } = props;\r\n    const { cooking3, setCooking3 } = props;\r\n    const { cooking4, setCooking4 } = props;\r\n    const { cookingTextB, setCookingTextB } = props;\r\n    const { lang3, setLang3 } = props;\r\n    const { lang4, setLang4 } = props;\r\n    const { langText3, setLangText3 } = props;\r\n    const { langText4, setLangText4 } = props;\r\n    const { otherSkills3, setOtherSkills3 } = props;\r\n    const { otherSkills4, setOtherSkills4 } = props;\r\n    const { otherSkillsText3, setOtherSkillsText3 } = props;\r\n    const { otherSkillsText4, setOtherSkillsText4 } = props;\r\n\r\n    return (\r\n        <Grid container>\r\n\r\n            <Grid item xs={12}>\r\n                <Container fixed>\r\n                    <div className={classes.formWrapper}>\r\n\r\n                        <Formik>\r\n                            <Form>\r\n\r\n                                <Grid container spacing={2}>\r\n\r\n                                    <Grid item xs={12}>\r\n                                        <FormLabel>Interview by Singapore EA</FormLabel>\r\n                                        <Grid>\r\n                                            <div style={{ padding: '10px', display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n                                                <Grid item xs={3}><Typography>Care of infants / children</Typography></Grid>\r\n                                                <RadioGroup\r\n                                                    value={infants1}\r\n                                                    row\r\n                                                    onChange={event => setInfants1(event.target.value)}\r\n                                                >\r\n                                                    <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                    <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                                </RadioGroup>\r\n                                                <RadioGroup\r\n                                                    value={infants2}\r\n                                                    row\r\n                                                    onChange={event => setInfants2(event.target.value)}\r\n                                                >\r\n                                                    <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                    <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                                </RadioGroup>\r\n                                                <Grid item xs={3}>\r\n                                                    <Textfield\r\n                                                        name=\"infantstext\"\r\n                                                        label=\"Assessment / Observation\"\r\n                                                        value={infantsText}\r\n                                                        onChange={event => setInfantsText(event.target.value)}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </div>\r\n                                        </Grid>\r\n                                        <hr />\r\n\r\n                                        <div style={{ padding: '10px', display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n                                            <Grid item xs={3}><Typography>Care of Elderly</Typography></Grid>\r\n                                            <RadioGroup\r\n                                                value={careElderly1}\r\n                                                row\r\n                                                onChange={event => setCareElderly1(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <RadioGroup\r\n                                                value={careElderly2}\r\n                                                row\r\n                                                onChange={event => setCareElderly2(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <Grid item xs={3}>\r\n                                                <Textfield\r\n                                                    name=\"careofelderlytext\"\r\n                                                    label=\"Assessment / Observation\"\r\n                                                    value={careElderlyText}\r\n                                                    onChange={event => setCareElderlyText(event.target.value)}\r\n                                                />\r\n                                            </Grid>\r\n                                        </div>\r\n                                        <hr />\r\n\r\n                                        <div style={{ padding: '10px', display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n                                            <Grid item xs={3}><Typography>Care of disabled</Typography></Grid>\r\n                                            <RadioGroup\r\n                                                value={careDisabled1}\r\n                                                row\r\n                                                onChange={event => setCareDisabled1(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <RadioGroup\r\n                                                value={careDisabled2}\r\n                                                row\r\n                                                onChange={event => setCareDisabled2(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <Grid item xs={3}>\r\n                                                <Textfield\r\n                                                    name=\"careofdisabledtext\"\r\n                                                    label=\"Assessment / Observation\"\r\n                                                    value={careDisabledText}\r\n                                                    onChange={event => setCareDisabledText(event.target.value)}\r\n                                                />\r\n                                            </Grid>\r\n                                        </div>\r\n                                        <hr />\r\n\r\n                                        <div style={{ padding: '10px', display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n                                            <Grid item xs={3}><Typography>General Housework</Typography></Grid>\r\n                                            <RadioGroup\r\n                                                value={genHouse1}\r\n                                                row\r\n                                                onChange={event => setGenHouse1(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <RadioGroup\r\n                                                value={genHouse2}\r\n                                                row\r\n                                                onChange={event => setGenHouse2(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <Grid item xs={3}>\r\n                                                <Textfield\r\n                                                    name=\"generalhouseworktext\"\r\n                                                    label=\"Assessment / Observation\"\r\n                                                    value={genHouseText}\r\n                                                    onChange={event => setGenHouseText(event.target.value)}\r\n                                                />\r\n                                            </Grid>\r\n                                        </div>\r\n                                        <hr />\r\n\r\n                                        <div style={{ padding: '10px', display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n                                            <Grid item xs={3}><Typography>Cooking</Typography></Grid>\r\n                                            <RadioGroup\r\n                                                value={cooking1}\r\n                                                row\r\n                                                onChange={event => setCooking1(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <RadioGroup\r\n                                                value={cooking2}\r\n                                                row\r\n                                                onChange={event => setCooking2(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <Grid item xs={3}>\r\n                                                <Textfield\r\n                                                    name=\"cookingtext\"\r\n                                                    label=\"Assessment / Observation\"\r\n                                                    value={cookingText}\r\n                                                    onChange={event => setCookingText(event.target.value)}\r\n                                                />\r\n                                            </Grid>\r\n                                        </div>\r\n                                        <hr />\r\n\r\n                                        <div style={{ padding: '10px', display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n                                            <Grid item xs={3}>\r\n                                                <Typography>Language Abilities</Typography>\r\n                                                <Textfield\r\n                                                    name=\"languageabilitiestext1\"\r\n                                                    label=\"Language Abilities\"\r\n                                                    value={langText1}\r\n                                                    onChange={event => setLangText1(event.target.value)}\r\n                                                />\r\n                                            </Grid>\r\n                                            <RadioGroup\r\n                                                value={lang1}\r\n                                                row\r\n                                                onChange={event => setLang1(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <RadioGroup\r\n                                                value={lang2}\r\n                                                row\r\n                                                onChange={event => setLang2(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <Grid item xs={3}>\r\n                                                <Textfield\r\n                                                    name=\"languageabilitiestext2\"\r\n                                                    label=\"Assessment / Observation\"\r\n                                                    value={langText2}\r\n                                                    onChange={event => setLangText2(event.target.value)}\r\n                                                />\r\n                                            </Grid>\r\n                                        </div>\r\n                                        <hr />\r\n\r\n                                        <div style={{ padding: '10px', display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n                                            <Grid item xs={3}>\r\n                                                <Typography>Other Skills</Typography>\r\n                                                <Textfield\r\n                                                    name=\"otherskillstext1\"\r\n                                                    label=\"Other Skills\"\r\n                                                    value={otherSkillsText1}\r\n                                                    onChange={event => setOtherSkillsText1(event.target.value)}\r\n                                                />\r\n                                            </Grid>\r\n                                            <RadioGroup\r\n                                                value={otherSkills1}\r\n                                                row\r\n                                                onChange={event => setOtherSkills1(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <RadioGroup\r\n                                                value={otherSkills2}\r\n                                                row\r\n                                                onChange={event => setOtherSkills2(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <Grid item xs={3}>\r\n                                                <Textfield\r\n                                                    name=\"otherskillstext2\"\r\n                                                    label=\"Assessment / Observation\"\r\n                                                    value={otherSkillsText2}\r\n                                                    onChange={event => setOtherSkillsText2(event.target.value)}\r\n                                                />\r\n                                            </Grid>\r\n                                        </div>\r\n                                        <hr />\r\n                                        <br />\r\n\r\n                                        <FormLabel>Interview by Training Centre EA</FormLabel>\r\n                                        <Grid>\r\n                                            <div style={{ padding: '10px', display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n                                                <Grid item xs={3}><Typography>Care of infants / children</Typography></Grid>\r\n                                                <RadioGroup\r\n                                                    value={infants3}\r\n                                                    row\r\n                                                    onChange={event => setInfants3(event.target.value)}\r\n                                                >\r\n                                                    <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                    <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                                </RadioGroup>\r\n                                                <RadioGroup\r\n                                                    value={infants4}\r\n                                                    row\r\n                                                    onChange={event => setInfants4(event.target.value)}\r\n                                                >\r\n                                                    <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                    <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                                </RadioGroup>\r\n                                                <Grid item xs={3}>\r\n                                                    <Textfield\r\n                                                        name=\"infantstext\"\r\n                                                        label=\"Assessment / Observation\"\r\n                                                        value={infantsTextB}\r\n                                                        onChange={event => setInfantsTextB(event.target.value)}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </div>\r\n                                        </Grid>\r\n                                        <hr />\r\n\r\n                                        <div style={{ padding: '10px', display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n                                            <Grid item xs={3}><Typography>Care of Elderly</Typography></Grid>\r\n                                            <RadioGroup\r\n                                                value={careElderly3}\r\n                                                row\r\n                                                onChange={event => setCareElderly3(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <RadioGroup\r\n                                                value={careElderly4}\r\n                                                row\r\n                                                onChange={event => setCareElderly4(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <Grid item xs={3}>\r\n                                                <Textfield\r\n                                                    name=\"careofelderlytext\"\r\n                                                    label=\"Assessment / Observation\"\r\n                                                    value={careElderlyTextB}\r\n                                                    onChange={event => setCareElderlyTextB(event.target.value)}\r\n                                                />\r\n                                            </Grid>\r\n                                        </div>\r\n                                        <hr />\r\n\r\n                                        <div style={{ padding: '10px', display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n                                            <Grid item xs={3}><Typography>Care of disabled</Typography></Grid>\r\n                                            <RadioGroup\r\n                                                value={careDisabled3}\r\n                                                row\r\n                                                onChange={event => setCareDisabled3(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <RadioGroup\r\n                                                value={careDisabled4}\r\n                                                row\r\n                                                onChange={event => setCareDisabled4(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <Grid item xs={3}>\r\n                                                <Textfield\r\n                                                    name=\"careofdisabledtext\"\r\n                                                    label=\"Assessment / Observation\"\r\n                                                    value={careDisabledTextB}\r\n                                                    onChange={event => setCareDisabledTextB(event.target.value)}\r\n                                                />\r\n                                            </Grid>\r\n                                        </div>\r\n                                        <hr />\r\n\r\n                                        <div style={{ padding: '10px', display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n                                            <Grid item xs={3}><Typography>General Housework</Typography></Grid>\r\n                                            <RadioGroup\r\n                                                value={genHouse3}\r\n                                                row\r\n                                                onChange={event => setGenHouse3(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <RadioGroup\r\n                                                value={genHouse4}\r\n                                                row\r\n                                                onChange={event => setGenHouse4(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <Grid item xs={3}>\r\n                                                <Textfield\r\n                                                    name=\"generalhouseworktext\"\r\n                                                    label=\"Assessment / Observation\"\r\n                                                    value={genHouseTextB}\r\n                                                    onChange={event => setGenHouseTextB(event.target.value)}\r\n                                                />\r\n                                            </Grid>\r\n                                        </div>\r\n                                        <hr />\r\n\r\n                                        <div style={{ padding: '10px', display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n                                            <Grid item xs={3}><Typography>Cooking</Typography></Grid>\r\n                                            <RadioGroup\r\n                                                value={cooking3}\r\n                                                row\r\n                                                onChange={event => setCooking3(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <RadioGroup\r\n                                                value={cooking4}\r\n                                                row\r\n                                                onChange={event => setCooking4(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <Grid item xs={3}>\r\n                                                <Textfield\r\n                                                    name=\"cookingtext\"\r\n                                                    label=\"Assessment / Observation\"\r\n                                                    value={cookingTextB}\r\n                                                    onChange={event => setCookingTextB(event.target.value)}\r\n                                                />\r\n                                            </Grid>\r\n                                        </div>\r\n                                        <hr />\r\n\r\n                                        <div style={{ padding: '10px', display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n                                            <Grid item xs={3}>\r\n                                                <Typography>Language Abilities</Typography>\r\n                                                <Textfield\r\n                                                    name=\"languageabilitiestext1\"\r\n                                                    label=\"Language Abilities\"\r\n                                                    value={langText3}\r\n                                                    onChange={event => setLangText3(event.target.value)}\r\n                                                />\r\n                                            </Grid>\r\n                                            <RadioGroup\r\n                                                value={lang3}\r\n                                                row\r\n                                                onChange={event => setLang3(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <RadioGroup\r\n                                                value={lang4}\r\n                                                row\r\n                                                onChange={event => setLang4(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <Grid item xs={3}>\r\n                                                <Textfield\r\n                                                    name=\"languageabilitiestext2\"\r\n                                                    label=\"Assessment / Observation\"\r\n                                                    value={langText4}\r\n                                                    onChange={event => setLangText4(event.target.value)}\r\n                                                />\r\n                                            </Grid>\r\n                                        </div>\r\n                                        <hr />\r\n\r\n                                        <div style={{ padding: '10px', display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n                                            <Grid item xs={3}>\r\n                                                <Typography>Other Skills</Typography>\r\n                                                <Textfield\r\n                                                    name=\"otherskillstext1\"\r\n                                                    label=\"Other Skills\"\r\n                                                    value={otherSkillsText3}\r\n                                                    onChange={event => setOtherSkillsText3(event.target.value)}\r\n                                                />\r\n                                            </Grid>\r\n                                            <RadioGroup\r\n                                                value={otherSkills3}\r\n                                                row\r\n                                                onChange={event => setOtherSkills3(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <RadioGroup\r\n                                                value={otherSkills4}\r\n                                                row\r\n                                                onChange={event => setOtherSkills4(event.target.value)}\r\n                                            >\r\n                                                <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                                <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                            </RadioGroup>\r\n                                            <Grid item xs={3}>\r\n                                                <Textfield\r\n                                                    name=\"otherskillstext2\"\r\n                                                    label=\"Assessment / Observation\"\r\n                                                    value={otherSkillsText4}\r\n                                                    onChange={event => setOtherSkillsText4(event.target.value)}\r\n                                                />\r\n                                            </Grid>\r\n                                        </div>\r\n                                        <hr />\r\n                                    </Grid>\r\n\r\n\r\n                                </Grid>\r\n                                <br />\r\n                            </Form>\r\n                        </Formik>\r\n\r\n                    </div>\r\n                </Container>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Third;","C:\\Users\\user\\helperform\\src\\Employees.js",["168","169","170"],"import React, { useState } from 'react'\nimport EmployeeForm from \"./EmployeeForm\";\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\nimport useTable from \"./Components/useTable\";\nimport * as employeeService from \"./services/employeeService\";\nimport Controls from \"./Components/controls/Controls\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Popup from \"./Components/Popup\";\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme => ({\n    pageContent: {\n        margin: theme.spacing(5),\n        padding: theme.spacing(3)\n    },\n    newButton: {\n        position: 'absolute',\n        right: '10px'\n    }\n}))\n\n\nconst headCells = [\n    { id: 'country', label: 'COUNTRY' },\n    { id: 'employer', label: 'EMPLOYER' },\n    { id: 'workduties', label: 'WORK DUTIES' },\n    { id: 'remark', label: 'REMARK' },\n    { id: 'year', label: 'YEAR'},\n    { id: 'actions', label: 'Actions', disableSorting: true }\n]\n\nexport default function Employees() {\n\n    const classes = useStyles();\n    const [recordForEdit, setRecordForEdit] = useState(null)\n    const [records, setRecords] = useState(employeeService.getAllEmployees())\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\n    const [openPopup, setOpenPopup] = useState(false)\n\n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    } = useTable(records, headCells, filterFn);\n\n    const addOrEdit = (employee, resetForm) => {\n        if (employee.id == 0)\n            employeeService.insertEmployee(employee)\n        else\n            employeeService.updateEmployee(employee)\n        resetForm()\n        setRecordForEdit(null)\n        setOpenPopup(false)\n        setRecords(employeeService.getAllEmployees())\n    }\n\n    const openInPopup = item => {\n        setRecordForEdit(item)\n        setOpenPopup(true)\n    }\n\n    return (\n        <>\n            <Paper className={classes.pageContent}>\n\n                <TblContainer>\n                    <TblHead />\n                    <TableBody>\n                        {\n                            recordsAfterPagingAndSorting().map(item =>\n                                (<TableRow key={item.id}>\n                                    <TableCell>{item.country}</TableCell>\n                                    <TableCell>{item.employer}</TableCell>\n                                    <TableCell>{item.workduties}</TableCell>\n                                    <TableCell>{item.remark}</TableCell>\n                                    <TableCell>{item.startDate} - {item.endDate}</TableCell>\n                                    <TableCell>\n                                        <Controls.ActionButton\n                                            color=\"primary\"\n                                            onClick={() => { openInPopup(item) }}>\n                                            <EditOutlinedIcon fontSize=\"small\" />\n                                        </Controls.ActionButton>\n                                        <Controls.ActionButton\n                                            color=\"secondary\">\n                                            <CloseIcon fontSize=\"small\" />\n                                        </Controls.ActionButton>\n                                    </TableCell>\n                                </TableRow>)\n                            )\n                        }\n                    </TableBody>\n                </TblContainer>\n                <TblPagination />\n                <Toolbar>\n                    <Controls.Button\n                        text=\"Add Employment\"\n                        variant=\"outlined\"\n                        startIcon={<AddIcon />}\n                        className={classes.newButton}\n                        onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\n                    />\n                </Toolbar>\n            </Paper>\n            <Popup\n                title=\"Employment History Overseas\"\n                openPopup={openPopup}\n                setOpenPopup={setOpenPopup}\n            >\n                <EmployeeForm\n                    recordForEdit={recordForEdit}\n                    addOrEdit={addOrEdit} />\n            </Popup>\n        </>\n    )\n}\n","C:\\Users\\user\\helperform\\src\\EmployeeForm.js",["171","172","173","174","175"],"import React, { useState, useEffect } from 'react'\nimport { Grid, } from '@material-ui/core';\nimport Controls from \"./Components/controls/Controls\";\nimport { useForm, Form } from './Components/useForm';\nimport * as employeeService from \"./services/employeeService\";\n\nconst initialFValues = {\n    id: 0,\n    country: '',\n    employer: '',\n    workduties: '',\n    remark: '',\n    startDate: new Date(),\n    endDate: new Date()\n}\n\nexport default function EmployeeForm(props) {\n    const { addOrEdit, recordForEdit } = props\n\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('country' in fieldValues)\n            temp.country = fieldValues.country ? \"\" : \"This field is required.\"\n        if ('employer' in fieldValues)\n            temp.employer = fieldValues.employer ? \"\" : \"This field is required.\"\n        if ('workduties' in fieldValues)\n            temp.workduties = fieldValues.workduties ? \"\" : \"This field is required.\"\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues == values)\n            return Object.values(temp).every(x => x == \"\")\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate);\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (validate()) {\n            addOrEdit(values, resetForm);\n        }\n    }\n\n    useEffect(() => {\n        if (recordForEdit != null)\n            setValues({\n                ...recordForEdit\n            })\n    }, [recordForEdit])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={3}>\n                <Controls.DatePicker\n                        name=\"startDate\"\n                        value={values.hireDate}\n                        onChange={handleInputChange}\n                    />\n                    </Grid>\n                    <Grid item xs={3}>\n                    <Controls.DatePicker\n                        name=\"endDate\"\n                        value={values.hireDate}\n                        onChange={handleInputChange}\n                    />\n                    </Grid>\n                    <Grid item xs={3}>\n                    <Controls.Input\n                        name=\"country\"\n                        label=\"Country\"\n                        value={values.country}\n                        onChange={handleInputChange}\n                        error={errors.country}\n                    />\n                    </Grid>\n                    <Grid item xs={3}>\n                    <Controls.Input\n                        label=\"Employer\"\n                        name=\"employer\"\n                        value={values.employer}\n                        onChange={handleInputChange}\n                        error={errors.employer}\n                    />\n                    </Grid>\n            <Grid item xs={6}>\n                    <Controls.Input\n                        label=\"Work Duties\"\n                        name=\"workduties\"\n                        multiline={true}\n                        rows={4}\n                        value={values.workduties}\n                        onChange={handleInputChange}\n                        error={errors.workduties}\n                    />\n                    </Grid>\n                    <Grid item xs={6}>\n                    <Controls.Input\n                        label=\"Remarks\"\n                        name=\"remarks\"\n                        multiline={true}\n                        rows={4}\n                        value={values.remarks}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={3}>\n                    <div>\n                        <Controls.Button\n                            type=\"submit\"\n                            text=\"Add\" />\n                        <Controls.Button\n                            text=\"Reset\"\n                            color=\"default\"\n                            onClick={resetForm} />\n                    </div>\n                </Grid>\n            </Grid>\n        </Form>\n    )\n}\n","C:\\Users\\user\\helperform\\src\\Components\\PageHeader.js",["176"],"import React from 'react'\nimport { Paper, Card, Typography, makeStyles, Button } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: '#fdfdff'\n    },\n    pageHeader:{\n        padding:theme.spacing(4),\n        display:'flex',\n        marginBottom:theme.spacing(2)\n    },\n    pageIcon:{\n        display:'inline-block',\n        padding:theme.spacing(2),\n        color:'#3c44b1'\n    },\n    pageTitle:{\n        paddingLeft:theme.spacing(4),\n        '& .MuiTypography-subtitle2':{\n            opacity:'0.6'\n        }\n    }\n}))\n\nexport default function PageHeader(props) {\n\n    const classes = useStyles();\n    const { title, subTitle, icon } = props;\n    return (\n        <Paper elevation={0} square className={classes.root}>\n            <div className={classes.pageHeader}>\n                <Card className={classes.pageIcon}>\n                    {icon}\n                </Card>\n                <div className={classes.pageTitle}>\n                    <Typography\n                        variant=\"h6\"\n                        component=\"div\">\n                        {title}</Typography>\n                    <Typography\n                        variant=\"subtitle2\"\n                        component=\"div\">\n                        {subTitle}</Typography>\n                </div>\n            </div>\n        </Paper>\n    )\n}\n",["177","178"],"C:\\Users\\user\\helperform\\src\\Components\\Popup.js",[],"C:\\Users\\user\\helperform\\src\\Components\\useTable.js",[],"C:\\Users\\user\\helperform\\src\\Components\\controls\\Controls.js",[],"C:\\Users\\user\\helperform\\src\\Components\\controls\\Input.js",[],"C:\\Users\\user\\helperform\\src\\Components\\controls\\RadioGroup.js",[],"C:\\Users\\user\\helperform\\src\\Components\\controls\\Select.js",[],"C:\\Users\\user\\helperform\\src\\Components\\controls\\Checkbox.js",[],"C:\\Users\\user\\helperform\\src\\Components\\controls\\DatePicker.js",[],"C:\\Users\\user\\helperform\\src\\Components\\controls\\Button.js",[],"C:\\Users\\user\\helperform\\src\\Components\\controls\\ActionButton.js",[],"C:\\Users\\user\\helperform\\src\\Components\\Header.js",[],"C:\\Users\\user\\helperform\\src\\Components\\useForm.js",[],"C:\\Users\\user\\helperform\\src\\services\\employeeService.js",["179"],"const KEYS = {\n    employees: 'employees',\n    employeeId: 'employeeId'\n}\n\nexport const getDepartmentCollection = () => ([\n    { id: '1', title: 'Development' },\n    { id: '2', title: 'Marketing' },\n    { id: '3', title: 'Accounting' },\n    { id: '4', title: 'HR' },\n])\n\nexport function insertEmployee(data) {\n    let employees = getAllEmployees();\n    data['id'] = generateEmployeeId()\n    employees.push(data)\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\n}\n\nexport function updateEmployee(data) {\n    let employees = getAllEmployees();\n    let recordIndex = employees.findIndex(x => x.id == data.id);\n    employees[recordIndex] = { ...data }\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\n\nexport function generateEmployeeId() {\n    if (localStorage.getItem(KEYS.employeeId) == null)\n        localStorage.setItem(KEYS.employeeId, '0')\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\n    return id;\n}\n\nexport function getAllEmployees() {\n    if (localStorage.getItem(KEYS.employees) == null)\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\n    let employees = JSON.parse(localStorage.getItem(KEYS.employees));\n    //map departmentID to department title\n    let departments = getDepartmentCollection();\n    return employees.map(x => ({\n        ...x,\n        department: departments[x.departmentId - 1]\n    }))\n}","C:\\Users\\user\\helperform\\src\\Cards.js",["180"],"import React from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport './style.css';\r\nimport PersonList from './CardComponents';\r\n\r\n\r\nexport default class List extends React.Component {\r\n    state = {\r\n        persons: [],\r\n        newPersons: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`http://localhost:5001/candidate`)\r\n            .then(res => {\r\n\r\n                const persons = res.data;\r\n\r\n                const newPersons = persons.map(value => {\r\n\r\n                    const birthDate = new Date(value.dateOfBirth);\r\n                    const difference = Date.now() - birthDate.getTime();\r\n                    const age = new Date(difference);\r\n\r\n                    value.age = Math.abs(age.getUTCFullYear() - 1970);\r\n\r\n                    return value;\r\n                })\r\n                this.setState({ newPersons });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container component=\"main\">\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    <b>Helpers (Card View)</b>\r\n                </Typography>\r\n                <Typography color=\"text.secondary\">\r\n                    Displays the data of all helper with card view\r\n                </Typography>\r\n                <div align=\"right\">\r\n                    <Link to=\"/Main\" underline=\"none\"><Button startIcon={<AddIcon />} variant=\"contained\">\r\n                        add helper\r\n                    </Button>\r\n                    </Link>\r\n                </div>\r\n                <Paper variant=\"outlined\" className=\"scroll\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\r\n\r\n                    <Grid container spacing={3}>\r\n                        {this.state.newPersons.map((person) => (\r\n                            <Grid item md={3}>\r\n                                <Card align=\"center\">\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        height=\"400\"\r\n                                        image={person.photo}\r\n                                        alt=\"\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                                            {person.fullName}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                            ID: {person.id} | Age: {person.age}\r\n                                            <div className=\"availability\">{person.status}</div>\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                    <CardActions className=\"thatButton\">\r\n                                        <Link to=\"/CardComponents\" underline=\"none\">\r\n                                            <Button size=\"small\">View More</Button>\r\n                                        </Link>\r\n                                    </CardActions>\r\n                                </Card>\r\n                            </Grid>\r\n                        ))}\r\n\r\n                    </Grid>\r\n                </Paper>\r\n            </Container>\r\n        )\r\n    }\r\n}","C:\\Users\\user\\helperform\\src\\CardComponents\\index.js",[],"C:\\Users\\user\\helperform\\src\\CardComponents\\CandidateRest\\index.js",[],"C:\\Users\\user\\helperform\\src\\CardComponents\\CandidateInfo\\index.js",["181","182"],"import React from 'react';\r\n\r\nimport axios from 'axios';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport ModalWindow from './ModalWindow';\r\nimport ModalBiodata from './ModalBiodata';\r\n\r\nexport default class CandidateInfo extends React.Component {\r\n    state = {\r\n        persons: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`http://localhost:5001/alexcandidate`)\r\n            .then(res => {\r\n                const persons = res.data;\r\n                this.setState({ persons });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { persons } = this.state\r\n        return (\r\n            <Container component=\"main\">\r\n                <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\r\n\r\n                    <Grid container>\r\n                        <img className=\"roundimg\" src={\"https://helpx.adobe.com/content/dam/help/en/photoshop/using/convert-color-image-black-white/jcr_content/main-pars/before_and_after/image-before/Landscape-Color.jpg\"}></img>\r\n\r\n                        <Typography component=\"h1\" variant=\"h6\">\r\n                            <b style={{ marginLeft: \"10px\" }}>{persons.fullName}</b>\r\n                        </Typography>\r\n\r\n                        <Typography color=\"text.secondary\">\r\n                            <br />\r\n                            <div style={{ marginBottom: \"50px\", marginLeft: \"-40px\", marginTop: \"20px\" }}>\r\n                                ID: {persons.id}\r\n                            </div>\r\n                            <div className=\"skills\">{persons.skills}</div>\r\n                        </Typography>\r\n                        <Typography>\r\n                            <div className=\"availability\">{persons.status}</div>\r\n                        </Typography>\r\n                        <div style={{ marginLeft: \"200px\" }}>\r\n                            <iframe width=\"420\" height=\"345\" src=\"https://www.youtube.com/embed/tgbNymZ7vqY\">\r\n                            </iframe></div>\r\n                    </Grid>\r\n                    <div style={{ marginTop: \"-150px\" }}>\r\n                        <Grid item xs={6}>\r\n                            <Typography>\r\n                            <Button variant=\"outlined\">Download</Button>\r\n                                <hr />\r\n                                <table>\r\n                                    <tr>\r\n                                        <td><b>Passport status:</b></td>\r\n                                        <td>{persons.passportStatus}</td>\r\n                                        <td><b>Pocket Money:</b></td>\r\n                                        <td>${persons.pocketMoney}</td>\r\n\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><b>Bio fee:</b></td>\r\n                                        <td>${persons.bioFee}</td>\r\n                                        <td><b>Minimum salary:</b></td>\r\n                                        <td>${persons.minimumSalary}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><b>Loan:</b></td>\r\n                                        <td>${persons.loan}</td>\r\n                                        <td><b>Marital status:</b></td>\r\n                                        <td>{persons.maritalStatus}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><b>Date of Birth:</b></td>\r\n                                        <td>{persons.dateOfBirth}</td>\r\n                                        <td><b>Experience in Sg:</b></td>\r\n                                        <td>{persons.experienceInSG}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><b>Place of Birth:</b></td>\r\n                                        <td>{persons.placeOfBirth}</td>\r\n                                    </tr>\r\n                                </table>\r\n                                <Stack spacing={2} direction=\"row\">\r\n                                <ModalWindow />\r\n                                <ModalBiodata />\r\n                                </Stack>\r\n                            </Typography>\r\n                        </Grid>\r\n                    </div>\r\n                </Paper>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\user\\helperform\\src\\CardComponents\\CandidateProfile\\index.js",[],"C:\\Users\\user\\helperform\\src\\CardComponents\\CandidateDoc\\index.js",[],"C:\\Users\\user\\helperform\\src\\CardComponents\\CandidateSkills\\index.js",[],"C:\\Users\\user\\helperform\\src\\CardComponents\\CandidateMedic\\index.js",[],"C:\\Users\\user\\helperform\\src\\CardComponents\\CandidateInfo\\ModalWindow.js",[],"C:\\Users\\user\\helperform\\src\\CardComponents\\CandidateInfo\\ModalBiodata.js",["183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228"],{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":19,"column":8,"nodeType":"235","messageId":"236","endLine":19,"endColumn":13},{"ruleId":"229","replacedBy":"237"},{"ruleId":"231","replacedBy":"238"},{"ruleId":"229","replacedBy":"239"},{"ruleId":"231","replacedBy":"240"},{"ruleId":"233","severity":1,"message":"234","line":15,"column":8,"nodeType":"235","messageId":"236","endLine":15,"endColumn":13},{"ruleId":"233","severity":1,"message":"234","line":14,"column":8,"nodeType":"235","messageId":"236","endLine":14,"endColumn":13},{"ruleId":"233","severity":1,"message":"241","line":3,"column":70,"nodeType":"235","messageId":"236","endLine":3,"endColumn":84},{"ruleId":"233","severity":1,"message":"242","line":38,"column":22,"nodeType":"235","messageId":"236","endLine":38,"endColumn":33},{"ruleId":"243","severity":1,"message":"244","line":49,"column":25,"nodeType":"245","messageId":"246","endLine":49,"endColumn":27},{"ruleId":"233","severity":1,"message":"247","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":25},{"ruleId":"233","severity":1,"message":"248","line":5,"column":13,"nodeType":"235","messageId":"236","endLine":5,"endColumn":28},{"ruleId":"243","severity":1,"message":"244","line":32,"column":25,"nodeType":"245","messageId":"246","endLine":32,"endColumn":27},{"ruleId":"243","severity":1,"message":"244","line":33,"column":53,"nodeType":"245","messageId":"246","endLine":33,"endColumn":55},{"ruleId":"249","severity":1,"message":"250","line":57,"column":8,"nodeType":"251","endLine":57,"endColumn":23,"suggestions":"252"},{"ruleId":"233","severity":1,"message":"253","line":2,"column":47,"nodeType":"235","messageId":"236","endLine":2,"endColumn":53},{"ruleId":"229","replacedBy":"254"},{"ruleId":"231","replacedBy":"255"},{"ruleId":"243","severity":1,"message":"244","line":22,"column":53,"nodeType":"245","messageId":"246","endLine":22,"endColumn":55},{"ruleId":"233","severity":1,"message":"256","line":17,"column":8,"nodeType":"235","messageId":"236","endLine":17,"endColumn":18},{"ruleId":"257","severity":1,"message":"258","line":33,"column":25,"nodeType":"259","endLine":33,"endColumn":223},{"ruleId":"260","severity":1,"message":"261","line":50,"column":29,"nodeType":"259","endLine":50,"endColumn":110},{"ruleId":"233","severity":1,"message":"262","line":18,"column":10,"nodeType":"235","messageId":"236","endLine":18,"endColumn":29},{"ruleId":"233","severity":1,"message":"263","line":42,"column":27,"nodeType":"235","messageId":"236","endLine":42,"endColumn":43},{"ruleId":"233","severity":1,"message":"264","line":44,"column":21,"nodeType":"235","messageId":"236","endLine":44,"endColumn":31},{"ruleId":"233","severity":1,"message":"265","line":47,"column":25,"nodeType":"235","messageId":"236","endLine":47,"endColumn":39},{"ruleId":"233","severity":1,"message":"266","line":49,"column":23,"nodeType":"235","messageId":"236","endLine":49,"endColumn":35},{"ruleId":"233","severity":1,"message":"267","line":51,"column":30,"nodeType":"235","messageId":"236","endLine":51,"endColumn":49},{"ruleId":"233","severity":1,"message":"268","line":53,"column":32,"nodeType":"235","messageId":"236","endLine":53,"endColumn":53},{"ruleId":"233","severity":1,"message":"269","line":55,"column":32,"nodeType":"235","messageId":"236","endLine":55,"endColumn":53},{"ruleId":"233","severity":1,"message":"270","line":61,"column":30,"nodeType":"235","messageId":"236","endLine":61,"endColumn":49},{"ruleId":"233","severity":1,"message":"271","line":63,"column":31,"nodeType":"235","messageId":"236","endLine":63,"endColumn":51},{"ruleId":"233","severity":1,"message":"272","line":64,"column":12,"nodeType":"235","messageId":"236","endLine":64,"endColumn":18},{"ruleId":"233","severity":1,"message":"273","line":64,"column":20,"nodeType":"235","messageId":"236","endLine":64,"endColumn":29},{"ruleId":"233","severity":1,"message":"274","line":65,"column":12,"nodeType":"235","messageId":"236","endLine":65,"endColumn":23},{"ruleId":"233","severity":1,"message":"275","line":65,"column":25,"nodeType":"235","messageId":"236","endLine":65,"endColumn":39},{"ruleId":"233","severity":1,"message":"276","line":66,"column":12,"nodeType":"235","messageId":"236","endLine":66,"endColumn":18},{"ruleId":"233","severity":1,"message":"277","line":66,"column":20,"nodeType":"235","messageId":"236","endLine":66,"endColumn":29},{"ruleId":"233","severity":1,"message":"278","line":67,"column":12,"nodeType":"235","messageId":"236","endLine":67,"endColumn":23},{"ruleId":"233","severity":1,"message":"279","line":67,"column":25,"nodeType":"235","messageId":"236","endLine":67,"endColumn":39},{"ruleId":"233","severity":1,"message":"280","line":68,"column":12,"nodeType":"235","messageId":"236","endLine":68,"endColumn":23},{"ruleId":"233","severity":1,"message":"281","line":68,"column":25,"nodeType":"235","messageId":"236","endLine":68,"endColumn":39},{"ruleId":"233","severity":1,"message":"282","line":69,"column":12,"nodeType":"235","messageId":"236","endLine":69,"endColumn":28},{"ruleId":"233","severity":1,"message":"283","line":69,"column":30,"nodeType":"235","messageId":"236","endLine":69,"endColumn":49},{"ruleId":"233","severity":1,"message":"284","line":70,"column":12,"nodeType":"235","messageId":"236","endLine":70,"endColumn":23},{"ruleId":"233","severity":1,"message":"285","line":70,"column":25,"nodeType":"235","messageId":"236","endLine":70,"endColumn":39},{"ruleId":"233","severity":1,"message":"286","line":71,"column":12,"nodeType":"235","messageId":"236","endLine":71,"endColumn":28},{"ruleId":"233","severity":1,"message":"287","line":71,"column":30,"nodeType":"235","messageId":"236","endLine":71,"endColumn":49},{"ruleId":"233","severity":1,"message":"288","line":72,"column":12,"nodeType":"235","messageId":"236","endLine":72,"endColumn":19},{"ruleId":"233","severity":1,"message":"289","line":72,"column":21,"nodeType":"235","messageId":"236","endLine":72,"endColumn":31},{"ruleId":"233","severity":1,"message":"290","line":73,"column":12,"nodeType":"235","messageId":"236","endLine":73,"endColumn":24},{"ruleId":"233","severity":1,"message":"291","line":73,"column":26,"nodeType":"235","messageId":"236","endLine":73,"endColumn":41},{"ruleId":"233","severity":1,"message":"292","line":74,"column":12,"nodeType":"235","messageId":"236","endLine":74,"endColumn":16},{"ruleId":"233","severity":1,"message":"293","line":74,"column":18,"nodeType":"235","messageId":"236","endLine":74,"endColumn":25},{"ruleId":"233","severity":1,"message":"294","line":75,"column":12,"nodeType":"235","messageId":"236","endLine":75,"endColumn":21},{"ruleId":"233","severity":1,"message":"295","line":75,"column":23,"nodeType":"235","messageId":"236","endLine":75,"endColumn":35},{"ruleId":"233","severity":1,"message":"296","line":76,"column":12,"nodeType":"235","messageId":"236","endLine":76,"endColumn":20},{"ruleId":"233","severity":1,"message":"297","line":76,"column":22,"nodeType":"235","messageId":"236","endLine":76,"endColumn":33},{"ruleId":"233","severity":1,"message":"298","line":77,"column":12,"nodeType":"235","messageId":"236","endLine":77,"endColumn":25},{"ruleId":"233","severity":1,"message":"299","line":77,"column":27,"nodeType":"235","messageId":"236","endLine":77,"endColumn":43},{"ruleId":"233","severity":1,"message":"300","line":78,"column":12,"nodeType":"235","messageId":"236","endLine":78,"endColumn":15},{"ruleId":"233","severity":1,"message":"301","line":78,"column":17,"nodeType":"235","messageId":"236","endLine":78,"endColumn":23},{"ruleId":"233","severity":1,"message":"302","line":79,"column":12,"nodeType":"235","messageId":"236","endLine":79,"endColumn":20},{"ruleId":"233","severity":1,"message":"303","line":79,"column":22,"nodeType":"235","messageId":"236","endLine":79,"endColumn":33},{"ruleId":"233","severity":1,"message":"304","line":80,"column":12,"nodeType":"235","messageId":"236","endLine":80,"endColumn":20},{"ruleId":"233","severity":1,"message":"305","line":80,"column":22,"nodeType":"235","messageId":"236","endLine":80,"endColumn":33},{"ruleId":"233","severity":1,"message":"306","line":81,"column":12,"nodeType":"235","messageId":"236","endLine":81,"endColumn":15},{"ruleId":"233","severity":1,"message":"307","line":81,"column":17,"nodeType":"235","messageId":"236","endLine":81,"endColumn":23},"no-native-reassign",["308"],"no-negated-in-lhs",["309"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar",["308"],["309"],["308"],["309"],"'InputAdornment' is defined but never used.","'setFilterFn' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'employeeService' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.","ArrayExpression",["310"],"'Button' is defined but never used.",["308"],["309"],"'PersonList' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'autocompleteClasses' is defined but never used.","'setFullNameError' is assigned a value but never used.","'setIdError' is assigned a value but never used.","'setBioFeeError' is assigned a value but never used.","'setLoanError' is assigned a value but never used.","'setPocketMoneyError' is assigned a value but never used.","'setMinimumSalaryError' is assigned a value but never used.","'setMaritalStatusError' is assigned a value but never used.","'setDateOfBirthError' is assigned a value but never used.","'setPlaceOfBirthError' is assigned a value but never used.","'height' is assigned a value but never used.","'setHeight' is assigned a value but never used.","'heightError' is assigned a value but never used.","'setHeightError' is assigned a value but never used.","'weight' is assigned a value but never used.","'setWeight' is assigned a value but never used.","'weightError' is assigned a value but never used.","'setWeightError' is assigned a value but never used.","'nationality' is assigned a value but never used.","'setNationality' is assigned a value but never used.","'nationalityError' is assigned a value but never used.","'setNationalityError' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","'setPhoneNumber' is assigned a value but never used.","'phoneNumberError' is assigned a value but never used.","'setPhoneNumberError' is assigned a value but never used.","'address' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'addressError' is assigned a value but never used.","'setAddressError' is assigned a value but never used.","'port' is assigned a value but never used.","'setPort' is assigned a value but never used.","'portError' is assigned a value but never used.","'setPortError' is assigned a value but never used.","'religion' is assigned a value but never used.","'setReligion' is assigned a value but never used.","'religionError' is assigned a value but never used.","'setReligionError' is assigned a value but never used.","'edu' is assigned a value but never used.","'setEdu' is assigned a value but never used.","'eduError' is assigned a value but never used.","'setEduError' is assigned a value but never used.","'siblings' is assigned a value but never used.","'setSiblings' is assigned a value but never used.","'aoc' is assigned a value but never used.","'setAoc' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"311","fix":"312"},"Update the dependencies array to be: [recordForEdit, setValues]",{"range":"313","text":"314"},[1580,1595],"[recordForEdit, setValues]"]